#!/usr/bin/env python3
"""
Add skills to service teams
"""

import psycopg2

# Team skills data
team_skills = {
    1: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ Elektrik sistemleri bakƒ±mƒ± ve onarƒ±mƒ±
‚Ä¢ Mekanik sistemler troubleshooting
‚Ä¢ HVAC sistem y√∂netimi ve optimizasyonu
‚Ä¢ Bina otomasyon sistemleri (BMS)
‚Ä¢ Yangƒ±n alarm ve g√ºvenlik sistemleri
‚Ä¢ Jenerat√∂r ve UPS bakƒ±mƒ±
‚Ä¢ Asans√∂r bakƒ±m koordinasyonu
‚Ä¢ Enerji verimliliƒüi projeleri
‚Ä¢ Periyodik bakƒ±m planlama""",

    2: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ Windows Server ve Linux sistem y√∂netimi
‚Ä¢ Active Directory ve domain y√∂netimi
‚Ä¢ Network yapƒ±landƒ±rma ve troubleshooting
‚Ä¢ Veritabanƒ± y√∂netimi (PostgreSQL, MySQL, MSSQL)
‚Ä¢ Bulut servisleri (AWS, Azure, Google Cloud)
‚Ä¢ Cybersecurity ve firewall y√∂netimi
‚Ä¢ Backup ve disaster recovery planlamasƒ±
‚Ä¢ ERP sistem desteƒüi (Odoo, SAP)
‚Ä¢ Help desk ve kullanƒ±cƒ± desteƒüi
‚Ä¢ Donanƒ±m kurulum ve bakƒ±mƒ±
‚Ä¢ Virtualization (VMware, Hyper-V)
‚Ä¢ Office 365 y√∂netimi""",

    3: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ CNC makine programlama ve operasyon
‚Ä¢ PLC programlama (Siemens S7, Allen Bradley)
‚Ä¢ End√ºstriyel robot programlama (ABB, KUKA, Fanuc)
‚Ä¢ SCADA sistem y√∂netimi
‚Ä¢ Hidrolik/Pn√∂matik sistem bakƒ±mƒ±
‚Ä¢ AC/DC motor bakƒ±m ve sarƒ±mƒ±
‚Ä¢ G√º√ß elektroniƒüi ve s√ºr√ºc√º sistemleri
‚Ä¢ Otomasyon panel tasarƒ±mƒ±
‚Ä¢ Kalibrasyon ve metroloji
‚Ä¢ Predictive maintenance teknikleri
‚Ä¢ Vibrasyon analizi
‚Ä¢ Termal g√∂r√ºnt√ºleme""",

    4: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ 7/24 acil m√ºdahale kapasitesi
‚Ä¢ Kriz y√∂netimi ve koordinasyon
‚Ä¢ ƒ∞lk yardƒ±m ve CPR sertifikasƒ±
‚Ä¢ Yangƒ±n s√∂nd√ºrme sistem bilgisi
‚Ä¢ Tehlikeli madde y√∂netimi (HAZMAT)
‚Ä¢ Elektrik kesinti m√ºdahalesi
‚Ä¢ Su baskƒ±nƒ± ve sƒ±zƒ±ntƒ± m√ºdahalesi
‚Ä¢ Doƒüalgaz ka√ßaƒüƒ± m√ºdahalesi
‚Ä¢ G√ºvenlik sistem arƒ±zalarƒ±
‚Ä¢ Acil durum eylem planƒ± uygulama
‚Ä¢ ƒ∞leti≈üim ve raporlama
‚Ä¢ Risk deƒüerlendirmesi""",

    5: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ Orta gerilim (OG) sistemleri
‚Ä¢ Trafo test ve bakƒ±mƒ±
‚Ä¢ Kompanzasyon sistem optimizasyonu
‚Ä¢ Kesintisiz g√º√ß kaynaklarƒ± (UPS)
‚Ä¢ Chiller ve soƒüutma sistemleri
‚Ä¢ Kompres√∂r ve basƒ±n√ßlƒ± hava sistemleri
‚Ä¢ Pompa, fan ve vana sistemleri
‚Ä¢ Kaynak i≈ülemleri (TIG, MIG, Elektrik ark)
‚Ä¢ Torna, freze ve metal i≈üleme
‚Ä¢ Yalƒ±tƒ±m ve izolasyon kontrolleri
‚Ä¢ Enerji analiz√∂rleri kullanƒ±mƒ±
‚Ä¢ Harmonik filtre sistemleri""",

    6: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ Cisco network altyapƒ±sƒ± y√∂netimi
‚Ä¢ Firewall yapƒ±landƒ±rma (Fortinet, Palo Alto, Checkpoint)
‚Ä¢ VPN kurulum ve y√∂netimi (Site-to-Site, Client VPN)
‚Ä¢ WiFi altyapƒ±sƒ± tasarƒ±mƒ± ve optimizasyonu
‚Ä¢ Network monitoring (PRTG, Zabbix, Nagios)
‚Ä¢ VLAN ve subnetting yapƒ±landƒ±rma
‚Ä¢ Load balancer ve traffic shaping
‚Ä¢ Network g√ºvenliƒüi ve penetrasyon testleri
‚Ä¢ SD-WAN √ß√∂z√ºmleri
‚Ä¢ BGP, OSPF routing protokolleri
‚Ä¢ QoS yapƒ±landƒ±rma
‚Ä¢ Network dok√ºmantasyonu""",

    7: """üéØ Takƒ±m Yetkinlikleri:
‚Ä¢ Sƒ±hhi tesisat bakƒ±m ve onarƒ±mƒ±
‚Ä¢ Su arƒ±tma sistemleri
‚Ä¢ Boya, badana ve duvar kaplama
‚Ä¢ Cam, doƒürama ve cephe bakƒ±mƒ±
‚Ä¢ √áatƒ± ve yalƒ±tƒ±m kontrolleri
‚Ä¢ Peyzaj ve bah√ße bakƒ±mƒ±
‚Ä¢ Temizlik hizmetleri koordinasyonu
‚Ä¢ Atƒ±k y√∂netimi ve geri d√∂n√º≈ü√ºm
‚Ä¢ ƒ∞√ß mekan tasarƒ±m ve d√ºzenleme
‚Ä¢ G√ºvenlik kamera sistemleri
‚Ä¢ Kart ge√ßi≈ü sistemleri
‚Ä¢ Otopark y√∂netimi"""
}

print("üìù Adding skills to teams...")

try:
    conn = psycopg2.connect(
        host="localhost",
        database="odoo_tech_service",
        user="odoo_dev",
        password="odoo_dev"
    )
    cur = conn.cursor()

    # First check if x_skills column exists
    cur.execute("""
        SELECT column_name
        FROM information_schema.columns
        WHERE table_name = 'maintenance_team'
        AND column_name = 'x_skills'
    """)

    if not cur.fetchone():
        # Add x_skills column if it doesn't exist
        print("Adding x_skills column to maintenance_team table...")
        cur.execute("""
            ALTER TABLE maintenance_team
            ADD COLUMN x_skills TEXT
        """)
        conn.commit()
        print("‚úÖ x_skills column added")

    # Update each team with skills
    for team_id, skills in team_skills.items():
        cur.execute("""
            UPDATE maintenance_team
            SET x_skills = %s
            WHERE id = %s
        """, (skills, team_id))
        print(f"‚úÖ Updated team {team_id} with skills")

    conn.commit()

    # Show final summary
    cur.execute("""
        SELECT t.id,
               CASE
                   WHEN t.name::text LIKE '%{%' THEN
                       (t.name::json->>'en_US')
                   ELSE
                       t.name::text
               END as team_name,
               COUNT(DISTINCT mtm.hr_employee_id) as member_count,
               CASE WHEN t.x_skills IS NOT NULL THEN 'Yes' ELSE 'No' END as has_skills,
               LEFT(t.x_skills, 50) as skills_preview
        FROM maintenance_team t
        LEFT JOIN maintenance_team_hr_employee_rel mtm ON t.id = mtm.maintenance_team_id
        GROUP BY t.id, t.name, t.x_skills
        ORDER BY t.id
    """)

    print("\nüìä Final Team Summary:")
    print("=" * 80)
    for row in cur.fetchall():
        print(f"Team {row[0]}: {row[1]}")
        print(f"  - Members: {row[2]}")
        print(f"  - Skills defined: {row[3]}")
        if row[4]:
            print(f"  - Preview: {row[4]}...")
        print()

    cur.close()
    conn.close()

except Exception as e:
    print(f"‚ùå Database error: {str(e)}")

print("‚úÖ Skills successfully added to all teams!")